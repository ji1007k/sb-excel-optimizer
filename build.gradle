plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.performance'
version = '0.0.1-SNAPSHOT'
java.sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    // Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'   // bootRun만 적용. jar 빌드 시 제외

    // Excel
    implementation 'org.apache.poi:poi:5.4.1'
    implementation 'org.apache.poi:poi-ooxml:5.4.1'
    implementation 'com.alibaba:easyexcel:3.3.2'
    implementation 'org.dhatim:fastexcel:0.19.0'

    // 추가 의존성 위에 작성하기 ------------------------------------------
    // 보안 취약점 해결을 위한 의존성 강제 업데이트
    implementation 'org.apache.commons:commons-lang3:3.18.0'    // poi-ooxml 취약점 해결용

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    
    // Database drivers
    runtimeOnly 'org.postgresql:postgresql'  // 개발/운영용

    // test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
}

test {
    useJUnitPlatform()

    doFirst {
        file("build/logs/gc").mkdirs()  // gc 로그 폴더 생성
    }
    
    // 성능 테스트를 위한 JVM 옵션
    jvmArgs = [
        '-Xmx1g',           // 힙 메모리 1GB
        '-Xms500m',         // 초기 힙 메모리 500mb
        '-XX:+UseG1GC',     // G1 가비지 컬렉터 사용
        '-XX:MaxGCPauseMillis=200',  // 최대 GC 일시정지 시간

        // GC 로그 설정 (Java 17 버전)
        '-Xlog:gc:build/logs/gc/gc-test.log:time,level,tags'
    ]
    
    // 테스트 실행 시간 제한 (30분)
    timeout = Duration.ofMinutes(60)
    
    // 테스트 병렬 실행 방지 (성능 테스트 정확성을 위해)
    maxParallelForks = 1
    
    // 테스트 결과 상세 출력
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
        showStandardStreams = false
    }
}
